# Importando as bibliotecas necess√°rias
import streamlit as st
import pandas as pd
import plotly.express as px

# Define o t√≠tulo e √≠cone da p√°gina
st.set_page_config(
    page_title="An√°lise do Airbnb - Lisboa", page_icon=":chart_with_upwards_trend:", layout="wide"
)

# Define o cabe√ßalho na sidebar
st.sidebar.markdown(
    "<div align='center'><img src='https://github.com/antoniomlo/Data_Science/blob/main/img/amlo-1.png?raw=true' width='100'></div>",
    unsafe_allow_html=True,
)
st.sidebar.title(" ")
st.sidebar.title(" ")
st.sidebar.title("""üòÅ Ol√°, seja bem-vindo(a)""")
st.sidebar.write(
    """Caso tenha alguma d√∫vida ou sugest√£o sobre a an√°lise, fique a vontade para entrar em contato comigo! """
)
st.sidebar.subheader(
    """üöÄ [Portf√≥lio](https://www.figma.com/proto/BlN1MI7h6WY9FadR1yufiu/Portf%C3%B3lio?page-id=0%3A1&type=design&node-id=314-165&viewport=-15%2C627%2C0.12&scaling=scale-down&starting-point-node-id=314%3A165&hotspot-hints=0)"""
)
st.sidebar.subheader("""‚úâÔ∏è Contato""")
st.sidebar.markdown(
    """
<a href="mailto:antoniomlm26@gmail.com" target="_blank"><img width=35 src="https://i.redd.it/izqwm1g21b751.png"/></a>
<a href="https://www.linkedin.com/in/antoniomlo/" target="_blank"><img width=50 src="https://static.vecteezy.com/system/resources/previews/018/930/587/original/linkedin-logo-linkedin-icon-transparent-free-png.png"/></a>
""",
    unsafe_allow_html=True,
)


st.image(
    "https://github.com/antoniomlo/Data_Science/blob/main/img/LinkedIn%20cover%20-%201.png?raw=true"
)
st.title("An√°lise dos Dados do Airbnb - Lisboa")
st.markdown("*por [Antonio Melo](https://www.linkedin.com/in/antoniomlo/)*")


st.markdown(
    """
O Airbnb √© uma plataforma inovadora que est√° transformando a forma como as pessoas viajam e se hospedam. Fundada h√° 14 anos, em 2008, a empresa j√° se tornou a maior rede de hospedagem do mundo, superando muitas redes hoteleiras tradicionais, sem possuir nenhum hotel pr√≥prio.

Atualmente, o Airbnb est√° presente em mais de **220 pa√≠ses**, com mais de **7 milh√µes de an√∫ncios de acomoda√ß√µes** em sua plataforma, incluindo casas, apartamentos, quartos e at√© mesmo castelos e iglus. A empresa tem sido respons√°vel por mudar a forma como as pessoas viajam, tornando a intera√ß√£o entre h√≥spede e anfitri√£o mais pr√≥xima e pessoal, e oferecendo op√ß√µes de hospedagem que muitas vezes s√£o mais acess√≠veis e aut√™nticas do que as op√ß√µes tradicionais de hot√©is.

Al√©m disso, o Airbnb tem sido um grande impulsionador da economia local, ajudando propriet√°rios de im√≥veis e pequenos empreendedores a ganhar dinheiro extra ao alugar suas acomoda√ß√µes para viajantes. Com dados dispon√≠veis atrav√©s do portal Inside Airbnb, √© poss√≠vel explorar insights e informa√ß√µes valiosas sobre o mercado de hospedagem em diversas cidades do mundo, incluindo Lisboa. Esses dados podem ser utilizados para desenvolver projetos de Data Science, identificar tend√™ncias e padr√µes de consumo, e auxiliar na tomada de decis√µes estrat√©gicas para propriet√°rios de im√≥veis e empresas do setor de turismo. 

Para acessar os dados dispon√≠veis no portal Inside Airbnb, basta visitar o link *[Inside Airbnb](http://insideairbnb.com/get-the-data.html)*.
"""
)

st.write(
   """Neste notebook, explorarei os dados do Airbnb em Lisboa para descobrir informa√ß√µes valiosas e insights que podem ajudar a entender melhor o mercado 
         de hospedagem da cidade. Com t√©cnicas de an√°lise de dados e visualiza√ß√£o, iremos descobrir tend√™ncias, padr√µes e oportunidades para quem est√° interessado 
         em investir ou utilizar os servi√ßos do Airbnb em Lisboa."""
)

# Importando o arquivo csv que iremos colocar no DataFrame e substituindo os valores NaN por string vazia
df = pd.read_csv(
    "http://data.insideairbnb.com/portugal/lisbon/lisbon/2023-03-19/visualisations/listings.csv",
    encoding="utf-8",
    na_values=["NaN", "N/A"],
).fillna("")

st.title("Obten√ß√£o dos Dados")
st.markdown(
    """
            Compreender dados √© essencial para tomar decis√µes mais informadas em diversas √°reas. E a boa not√≠cia √© que h√° ferramentas que podem ajudar na an√°lise desses 
            dados de forma clara e objetiva, como as bibliotecas de an√°lise de dados e gr√°ficos em Python. Essas bibliotecas permitem criar visualiza√ß√µes que ajudam a 
            identificar padr√µes, tend√™ncias e rela√ß√µes entre vari√°veis. E o melhor √© que voc√™ n√£o precisa ser um especialista em programa√ß√£o para utiliz√°-las.
            """
)
st.markdown(
    "Basta importar as bibliotecas adequadas e seguir algumas boas pr√°ticas para garantir gr√°ficos leg√≠veis e informativos."
)

cor1 = ["#FF5A5F"]
colors = {
    "Entire home/apt": "#FF5A5F",
    "Private room": "#262730",
    "Shared room": "#262730",
    "Hotel room": "#802D2F",
}

# Mostrando o c√≥digo
with st.expander("Expandir C√≥digo"):
    st.code(
        """
      # Importando as bibliotecas necess√°rias
        import streamlit as st
        import pandas as pd
        import plotly.express as px

        # Importando o arquivo csv que iremos colocar no DataFrame e substituindo os valores NaN por string vazia
        df = pd.read_csv("http://data.insideairbnb.com/portugal/lisbon/lisbon/2023-03-19/visualisations/listings.csv", na_values=["NaN", "N/A"]).fillna("")
    """
    )

st.title("An√°lise dos Dados")
st.markdown(
    """
            Neste t√≥pico, vamos analisar os dados do Airbnb em Lisboa para encontrar insights e informa√ß√µes valiosas sobre o mercado de hospedagem na cidade. Vamos utilizar t√©cnicas de an√°lise de dados 
            e visualiza√ß√£o para descobrir tend√™ncias e padr√µes que possam ajudar na tomada de decis√µes estrat√©gicas, seja para investidores ou empresas do setor de turismo.
            """
)

data_dict = {
    "id": "N√∫mero de ID do im√≥vel",
    "name": "Nome da propriedade anunciada",
    "host_id": "N√∫mero de ID do propriet√°rio",
    "host_name": "Nome do propriet√°rio",
    "neighbourhood_group": "Nome da Cidade",
    "neighbourhood": "Nome do Bairro",
    "latitude": "Coordenada da latitude da propriedade",
    "longitude": "Coordenada da longitude da propriedade",
    "room_type": "Tipo de quarto",
    "price": "Pre√ßo do aluguel",
    "minimum_nights": "M√≠nimo de noites para reserva",
    "number_of_reviews": "N√∫mero de feedbacks da propriedade",
    "last_review": "Data do √∫ltimo feedback",
    "reviews_per_month": "N√∫mero de feedbacks por m√™s",
    "calculated_host_listings_count": "Quantidade de im√≥veis do mesmo propriet√°rio",
    "availability_365": "N√∫mero de dias de disponibilidade dentro de 365 dias",
}
st.header("Dicion√°rio das vari√°veis")
st.write("Aqui irei disponibilizar um dicion√°rio das vari√°veis presentes no dataset.")
with st.expander("Expandir Dicion√°rio"):
    st.write(data_dict)

st.header("Visualiza√ß√£o")
st.write(
    "Para iniciar, irei analisar os dados brutos para obter os insights necess√°rios."
)

tab1, tab2, tab3 = st.tabs(["Tabela", "Informa√ß√µes", "Gr√°ficos"])
with tab1:
    st.subheader("Tabela")
    st.write("Essa √© uma pr√© visualiza√ß√£o dos dados presentes em nosso dataset.")
    st.dataframe(df.head(10))

with tab2:
    st.subheader("Informa√ß√µes Gerais")

    # Identificando o volume de dados do DataFrame
    rows = "{:,}".format(df.shape[0]).replace(",", ".")
    st.markdown(f"O dataset possui **{rows} linhas** e **{df.shape[1]} colunas**.")

    # Verificando os tipos de vari√°veis presentes
    st.write("Tipos de vari√°veis presentes no dataset:")

    col1, col2 = st.columns([3, 2])
    col1.write(df.dtypes)
    t = df.dtypes.value_counts()
    l = len(t)
    i = df.select_dtypes(include=["int"]).shape[1]
    f = df.select_dtypes(include=["float"]).shape[1]
    o = df.select_dtypes(include=["object"]).shape[1]

    col2.metric(label="", value=l, delta="tipos de vari√°veis", delta_color="off")
    col2.metric(label="", value=i, delta="vari√°veis do tipo inteiro", delta_color="off")
    col2.metric(label="", value=f, delta="vari√°veis do tipo float", delta_color="off")
    col2.metric(label="", value=o, delta="vari√°veis do tipo objeto", delta_color="off")

with tab3:
    st.write(
        "Nessa se√ß√£o √© poss√≠vel ver como se encontra a distribui√ß√£o dos valores no dataset."
    )
    num_cols = df.select_dtypes(include=["int64", "float64"]).columns.tolist()
    coluna_selecionada = st.selectbox("Selecione a coluna", num_cols)
    col1, col2 = st.columns([3, 1.5])

    # Plota o histograma da coluna selecionada
    fig = px.histogram(df, x=coluna_selecionada, nbins=15, color_discrete_sequence=cor1)
    fig.update_yaxes(title="Contagem")
    fig.update_layout(title=coluna_selecionada, bargap=0.1)
    col1.plotly_chart(fig)

    fig2 = px.box(
        df,
        y=coluna_selecionada,
        color_discrete_sequence=cor1,
        points="all",
        width=250,
        height=465,
    )
    fig2.update_traces(jitter=0, pointpos=-2)
    fig2.update_layout(yaxis_title="Valor")
    col2.plotly_chart(fig2)
    st.markdown(
        """Quando o valor filtrado √© *minimum_nights* √© poss√≠vel ver que h√° alguns valores acima de 365 dias, o que est√° afetando drascticamente
     a distribuil√ß√£o dos valores e tamb√©m o boxplot. Na coluna *price* temos a mesma situa√ß√£o, com alguns valores de di√°rias muito altas."""
    )

st.markdown(
    """Com essa visualiza√ß√£o, √© poss√≠vel notar na aba **Gr√°ficos** que diversas colunas, como *minimum_nights e price* por exemplo,
possuem alguns ***outliers***, que s√£o valores fora da curva e atrapalham um pouco a visualiza√ß√£o e torna a an√°lise menos precisa. 
Visando ter uma an√°lise mais assertiva, antes de iniciar irei remover esses valores fora da curva."""
)

st.write(
    """Vale ressaltar que no come√ßo os valores nulos foram substitu√≠dos por strings vazias ent√£o o dataset n√£o possui mais valores desse
 tipo. Ent√£o, o pr√≥ximo passo ser√° fazer o tratamento dos outliers e come√ßar a an√°lise em si."""
)

st.title("Tratamento dos Dados")
st.markdown(
    """
            Para esta √©tapa, irei utilizar a fun√ß√£o *drop* para remover as propriedades que tem os valores de *minimum_nights* maiores que    **14 noites**, tendo em vista que √© uma pesquisa
            para ajudar viajantes que est√£o indo para conhecer a cidade. Al√©m disso, irei remover todos os im√≥veis com valores acima de **‚Ç¨600 euros** 
            por noite na coluna *price*, visando tornar a pesquisa mais objetiva, e filtrar o dataset somente para a cidade de Lisboa.
            """
)

# Definindo o novo dataset sem outliers
df_clean = df.copy()
df_clean.drop(df_clean[df_clean.price > 300].index, axis=0, inplace=True)
df_clean.drop(df_clean[df_clean.minimum_nights > 14].index, axis=0, inplace=True)
df_clean = df_clean[df_clean["neighbourhood_group"] == "Lisboa"]

# Mostrando o c√≥digo
with st.expander("Expandir C√≥digo"):
    st.code(
        """
        # Definindo o novo dataset sem outliers
    df_clean = df.copy()
    df_clean.drop(df_clean[df_clean.price > 600].index, axis=0, inplace=True)
    df_clean.drop(df_clean[df_clean.minimum_nights > 10].index, axis=0, inplace=True)
    df_clean = df_clean[df_clean['neighbourhood_group'] == 'Lisboa']
    """
    )

tab1, tab2 = st.tabs(["Di√°rias", "Valores"])
with tab1:
    st.write(
        "Nessa se√ß√£o √© poss√≠vel ver como se encontra a distribui√ß√£o dos valores no dataset."
    )
    coluna_selecionada = "minimum_nights"
    col1, col2 = st.columns([3, 1.5])

    # Plota o histograma da coluna selecionada
    fig = px.histogram(
        df_clean, x=coluna_selecionada, nbins=15, color_discrete_sequence=cor1
    )
    fig.update_yaxes(title="Contagem")
    fig.update_layout(title=coluna_selecionada, bargap=0.1)
    col1.plotly_chart(fig)

    fig2 = px.box(
        df_clean,
        y=coluna_selecionada,
        color_discrete_sequence=cor1,
        points="all",
        width=250,
        height=465,
    )
    fig2.update_traces(jitter=0, pointpos=-2)
    fig2.update_layout(yaxis_title="Valor")
    col2.plotly_chart(fig2)

with tab2:
    st.write(
       "Nessa se√ß√£o √© poss√≠vel ver como se encontra a distribui√ß√£o dos valores no dataset."
    )
    coluna_selecionada = "price"
    col1, col2 = st.columns([3, 1.5])

    # Plota o histograma da coluna selecionada
    fig = px.histogram(
        df_clean, x=coluna_selecionada, nbins=15, color_discrete_sequence=cor1
    )
    fig.update_yaxes(title="Contagem")
    fig.update_layout(title=coluna_selecionada, bargap=0.1)
    col1.plotly_chart(fig)

    fig2 = px.box(
        df_clean,
        y=coluna_selecionada,
        color_discrete_sequence=cor1,
        points="all",
        width=250,
        height=465,
    )
    fig2.update_traces(jitter=0, pointpos=-2)
    fig2.update_layout(yaxis_title="Valor")
    col2.plotly_chart(fig2)

st.markdown(
    """Ao analisar essas informa√ß√µes, podemos descobrir padr√µes e tend√™ncias que nos ajudar√£o a entender melhor as prefer√™ncias dos turistas que visitam Lisboa e como podemos atender melhor suas necessidades.
    Al√©m disso, podemos identificar oportunidades de neg√≥cios para propriet√°rios de im√≥veis que desejam maximizar seus lucros e oferecer uma experi√™ncia de hospedagem de qualidade aos seus h√≥spedes.
     """
)
st.write(
    "Ent√£o, vamos mergulhar nesses dados e descobrir o que eles t√™m a nos revelar sobre a ind√∫stria de hospedagem em Lisboa pelo Airbnb!"
)

st.header("Tipos de acomoda√ß√µes mais reservados")
st.markdown(
    """Quando estamos buscando um lugar para nos hospedar, o tipo de acomoda√ß√£o pode fazer toda a diferen√ßa na experi√™ncia que teremos. Por isso, √© importante entender quais s√£o os tipos de acomoda√ß√µes mais populares em uma cidade, como Lisboa."""
)

qtd = df_clean.room_type.value_counts()
prec = df_clean.room_type.value_counts(normalize=True) * 100

tab1, tab2, tab3 = st.tabs(["Em quantidade", "Em porcentagem", "M√©dia de pre√ßos"])
with tab1:
    fig1 = px.bar(
        df_clean,
        x=qtd.index,
        y=qtd,
        color=qtd.index,
        text=qtd,
        hover_name=qtd.index,
        color_discrete_map=colors,
    )

    fig1.update_traces(textposition="outside")
    fig1.update_layout(
        title="Quantidade de quartos por tipo",
        xaxis_title="Tipos de Quartos",
        yaxis_title="Contagem",
        legend_title="Tipos de quartos",
        width=1200,
    )
    st.plotly_chart(fig1)

with tab2:
    fig2 = px.bar(
        df_clean,
        x=prec.index,
        y=prec,
        color=prec.index,
        text=prec.apply(lambda x: "{:.2f}%".format(x)),
        hover_name=prec.index,
        color_discrete_map=colors,
    )

    fig2.update_traces(texttemplate="%{text}", textposition="outside")

    fig2.update_layout(
        title="Porcentagem de quartos por tipo",
        xaxis_title="Tipos de Quartos",
        yaxis_title="Porcentagem",
        legend_title="Tipos de quartos",
        width=1200,
    )
    st.plotly_chart(fig2)

with tab3:
    med = df_clean.groupby(["room_type"]).price.mean()
    fig1 = px.bar(
        df_clean,
        x=med.index,
        y=med,
        color=med.index,
        text=med,
        hover_name=med.index,
        color_discrete_map=colors,
    )

    fig1.update_traces(texttemplate="‚Ç¨ %{value:.2f}", textposition="outside")
    fig1.update_layout(
        title="M√©dia de Pre√ßo por Tipo de Quarto",
        xaxis_title="Tipos de Quartos",
        yaxis_title="M√©dia de Pre√ßo",
        legend_title="Tipos de quartos",
        width=1200,
    )
    st.plotly_chart(fig1)

st.markdown(
    """Agora que sabemos como est√° a disposi√ß√£o das propriedades no airbnb de Lisboa, √© poss√≠vel notar que mais de 75% das acomoda√ß√µes oferecidas s√£o do tipo "Entire home/apt"
, que seriam acomoda√ß√µes inteiras. Com isso, sabemos que esse tipo de quarto √© o mais alugado na cidade de Lisboa... mas ser√° que √© o mais em conta?

 Vamos descobrir a partir da m√©dia de pre√ßo de cada tipo de quarto.
 """
)

st.header("Tend√™ncias de pre√ßos na cidade de Lisboa")

st.markdown(
    """Nessa se√ß√£o, vamos ver quest√µes  relacionadas aos custos de hospedagens tanto em rela√ß√£o ao tipo de acomoda√ß√£o como tamb√©m verificar quais 
os bairros mais caros e os mais baratos para se hospedar."""
)

top5 = df_clean.groupby(["neighbourhood"]).price.mean().sort_values(ascending=True)[-5:]
bot5 = (
    df_clean.groupby(["neighbourhood"]).price.mean().sort_values(ascending=False)[-5:]
)

default_color = "#262730"
colors = [default_color] * 5
colors[-1] = "#FF5A5F"
col1, col2 = st.columns([1, 1])

fig1 = px.bar(
    x=top5.values,
    y=top5.index,
    title="Bairros mais caros",
    width=550,
    color=top5.index,
    color_discrete_map={k: v for k, v in zip(top5.index, colors)},
    text=top5,
)
fig1.update_layout(
    xaxis_title="M√©dia de Pre√ßo", yaxis_title="Bairros", showlegend=False
)
fig1.update_traces(texttemplate="‚Ç¨ %{value:.2f}", textposition="inside")
col1.plotly_chart(fig1)

fig2 = px.bar(
    x=bot5.values,
    y=bot5.index,
    title="Bairros mais baratos",
    width=550,
    color=bot5.index,
    color_discrete_map={k: v for k, v in zip(bot5.index, colors)},
    text=bot5,
)
fig2.update_layout(
    xaxis_title="M√©dia de Pre√ßo", yaxis_title="Bairros", showlegend=False
)
fig2.update_traces(texttemplate="‚Ç¨ %{value:.2f}", textposition="inside")
col2.plotly_chart(fig2)

st.markdown(
    """Analisando os gr√°ficos, vemos os 5 bairros mais caros e os 5 bairros mais baratos. O mais caro, que √© o bairro ***Parque das Na√ß√µes*** apresentou uma m√©dia de pre√ßos de **‚Ç¨123.70**,
 o que j√° era esperado por ser o bairro com um dos metros quadrados mais caros da cidade, por volta de 7 mil euros.


 Mas e se eu quiser me hospedar no bairro mais caro da cidade pagando pouco, √© poss√≠vel? **Vamos descobrir!**"""
)

col1, col2 = st.columns([2, 1])
df_pq = df_clean[df_clean["neighbourhood"] == "Parque das Naes"].price
fig2 = px.box(
    df_pq,
    y=coluna_selecionada,
    color_discrete_sequence=cor1,
    points="all",
    width=250,
    height=520,
)
fig2.update_traces(jitter=0, pointpos=-2)
fig2.update_layout(yaxis_title="Valor")
col2.plotly_chart(fig2)

col1.image(
    "https://content.r9cdn.net/rimg/dimg/84/94/535ec7a0-lm-167675-16d2176a611.jpg?width=1366&height=768&xhint=1339&yhint=1077&crop=true",
    width=800,
)

st.markdown(
    """E a resposta √© **SIM!** √â poss√≠vel se hospedar no bairro mais caro pagando pouco. Com esse boxplot acima, √© poss√≠vel ver que o menor valor √© de **‚Ç¨17**, que na cota√ß√£o atual a noite sai por volta
de **R$92**.
"""
)

# Mapa das propriedades do Airbnb em Lisboa
st.header("Mapa das propriedades do Airbnb em Lisboa")
st.markdown(
    """Esse mapa abaixo, mostra os im√≥veis espalhados pelo dsitrito de Lisboa (n√£o pela cidade) de acordo com sua localiza√ß√£o e pre√ßo.
 Quanto mais vermelho, mais caro o pre√ßo por noite do im√≥vel..
"""
)
fig = px.scatter_mapbox(
    df_clean,
    lat="latitude",
    lon="longitude",
    hover_name="neighbourhood",
    height=600,
    hover_data=["price"],
    color="price",
    color_continuous_scale="jet",
    zoom=12,
    width=1200,
    title="Mapa de distribui√ß√£o dos im√≥veis em Lisboa",
    labels={"price": "Pre√ßo m√©dio"},
)
fig.update_layout(
    mapbox_style="carto-darkmatter",
    mapbox_center={"lat": df_clean.latitude.mean(), "lon": df_clean.longitude.mean()},
)
st.plotly_chart(fig)


st.header("Conclus√µes")
st.markdown(
    """Ap√≥s an√°lise detalhada dos dados do Airbnb em Lisboa, foram identificados diversos par√¢metros relevantes, tais como as localidades mais caras para se hospedar,
 a m√©dia de pre√ßos por bairro, um mapa de calor com a distribui√ß√£o dos im√≥veis e seus pre√ßos, e muito mais.


A partir dessas informa√ß√µes, foi poss√≠vel concluir que mesmo com um or√ßamento limitado, √© poss√≠vel aproveitar tudo o que essa cidade incr√≠vel tem a oferecer e se hospedar em √°reas nobres. 
Tamb√©m foram identificados os tipos de im√≥veis mais procurados pelos usu√°rios do Airbnb em Lisboa, bem como a m√©dia de noites de hospedagem.


√â importante ressaltar que esta an√°lise foi realizada de forma resumida, abordando apenas os principais par√¢metros e utilizando um arquivo csv como fonte de dados. 
Apesar disso, os resultados obtidos permitem uma vis√£o geral sobre a situa√ß√£o do mercado de hospedagem na cidade e podem ser √∫teis para quem busca informa√ß√µes relevantes sobre a 
hospedagem em Lisboa."""
)